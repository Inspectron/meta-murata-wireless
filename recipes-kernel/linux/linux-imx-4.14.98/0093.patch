diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/chip.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/chip.c
index e3d0df7..aa1d62a 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/chip.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/chip.c
@@ -1491,11 +1491,6 @@ void brcmf_chip_reset_pmu_regs(struct brcmf_chip *pub)
 		addr = CORE_CC_REG(base, pmucontrol_ext);
 		chip->ops->write32(chip->ctx, addr,
 			CY_43012_PMU_CONTROL_EXT_MASK);
-
-		/* PMU watchdog */
-		addr = CORE_CC_REG(base, pmuwatchdog);
-		chip->ops->write32(chip->ctx, addr,
-			CY_43012_PMU_WATCHDOG_TICK_VAL);
 		break;
 
 	default:
@@ -1588,10 +1583,17 @@ void brcmf_chip_reset_watchdog(struct brcmf_chip *pub)
 
 	switch (pub->chip) {
 	case CY_CC_43012_CHIP_ID:
+		addr = CORE_CC_REG(base, min_res_mask);
+		chip->ops->write32(chip->ctx, addr,
+			CY_43012_PMU_MIN_RES_MASK);
 		/* Watchdog res mask */
 		addr = CORE_CC_REG(base, watchdog_res_mask);
 		chip->ops->write32(chip->ctx, addr,
 			CY_43012_PMU_MIN_RES_MASK);
+		/* PMU watchdog */
+		addr = CORE_CC_REG(base, pmuwatchdog);
+		chip->ops->write32(chip->ctx, addr,
+			CY_43012_PMU_WATCHDOG_TICK_VAL);
 		break;
 	case CY_CC_4373_CHIP_ID:
 		addr = CORE_CC_REG(base, min_res_mask);
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
index 9360c67..5480324 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/sdio.c
@@ -4621,8 +4621,6 @@ void brcmf_sdio_remove(struct brcmf_sdio *bus)
 						FMAC_ULP_ENTRY_RECV) {
 						brcmf_chip_ulp_reset_lhl_regs(bus->ci);
 						brcmf_chip_reset_pmu_regs(bus->ci);
-						brcmf_chip_set_default_min_res_mask(
-						bus->ci);
 				} else {
 						brcmf_chip_set_passive(bus->ci);
 				}
